oh-my-posh init pwsh | Invoke-Expression
function doit { adb shell settings put global hide_gesture_line 1 }
function c-site ($filename) { 
            mkdir $filename
                        cp "S:\code\site\*" ".\$filename" -Recurse 
}


Set-Alias eth get-netadapter
Set-Alias rr powershell
Set-Alias c clear
Set-Alias e nvim
Set-Alias n nvim
Set-Alias np notepad
Set-Alias sd stop-computer
Set-Alias rb restart-computer


function q { exit }
function ~ { cd ~ }


function dk { cd ~\Desktop }
function pc { cd ~\Pictures }
function dn { cd ~\Downloads }
function dc { cd ~\Documents }
function to ($loc) { cd $loc }


function w-s($name) { winget search $name }
function w-i($name) { winget install $name }
function w-r ($name) { winget remove $name }
function w-u($name) { winget upgrade $name }
function w-l($name) { winget list $name }
function w-u-a { winget upgrade --all }



function e-ps { nvim ~\Documents\WindowsPowershell\Microsoft.PowerShell_profile.ps1 }
function e-nv { nvim ~\AppData\Local\nvim\init.vim }
function src-ps { cat "~\Documents\WindowsPowershell\Microsoft.PowerShell_profile.ps1" >> "s:\config\powershell" }
function src-nv { cat "~\AppData\Local\nvim\init.vim" >> "s:\config\neovim" }


Set-Alias adb "c:\Tools\ADB\adb"
function adb-r($name) {adb uninstall --user 0 $name}
Set-Alias gdb "c:\Tools\ADB\uad_gui-windows"


Set-Alias vmware "C:\Program Files (x86)\VMware\VMware Player\VMPlayer.exe"
function touch($file) {
                "" | Out-File $file -Encoding ASCII
}
function df {
                get-volume
}
function sed($file, $find, $replace) {
                (Get-Content $file).replace("$find", $replace) | Set-Content $file
}
function which($name) {
                Get-Command $name | Select-Object -ExpandProperty Definition
}
function grep($regex, $dir) {
            if ( $dir ) {
                                    Get-ChildItem $dir | select-string $regex
                                                                return
                                                                                                }
                                                                                                                                    $input | select-string $regex
}
function unzip ($file) {
            Write-Output("Extracting", $file, "to", $pwd)
                        $fullFile = Get-ChildItem -Path $pwd -Filter .\cove.zip | ForEach-Object { $_.FullName }
                                        Expand-Archive -Path $fullFile -DestinationPath $pwd
}

function find-file($name) {
                Get-ChildItem -recurse -filter "*${name}*" -ErrorAction SilentlyContinue | ForEach-Object {
                                                        $place_path = $_.directory
                                                                                                                        Write-Output "${place_path}\${_}"
                                                                                                                                                                                                                        }
}

function ff($name) {
                Get-ChildItem -recurse -filter "*${name}*" -ErrorAction SilentlyContinue | ForEach-Object {
                                                        $place_path = $_.directory
                                                                                                                        Write-Output "${place_path}\${_}"
                                                                                                                                                                                                                        }
}

function ll { Get-ChildItem -Path $pwd -File }
function cd... { Set-Location ..\.. }
function cd.... { Set-Location ..\..\.. }
function doit { adb shell settings put global hide_gesture_line 1 }
function c-site ($filename) { 
            mkdir $filename
                        cp "S:\code\site\*" ".\$filename" -Recurse 
}


Set-Alias eth get-netadapter
Set-Alias rr powershell
Set-Alias c clear
Set-Alias e nvim
Set-Alias n nvim
Set-Alias np notepad


function q { exit }
function ~ { cd ~ }


function dk { cd ~\Desktop }
function pc { cd ~\Pictures }
function dn { cd ~\Downloads }
function dc { cd ~\Documents }
function to ($loc) { cd $loc }


function w-s($name) { winget search $name }
function w-i($name) { winget install $name }
function w-r ($name) { winget remove $name }
function w-u($name) { winget upgrade $name }
function w-l($name) { winget list $name }
function w-u-a { winget upgrade -all }



function e-ps { nvim "$HOME\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1" }
function e-nv { nvim "$HOME\AppData\Local\nvim\init.vim" }
function src-ps { cat "$HOME\Documents\WindowsPowershell\Microsoft.PowerShell_profile.ps1" >> "s:\config\powershell" }
function src-nv { cat "$HOME\AppData\Local\nvim\init.vim" >> "s:\config\neovim" }


Set-Alias adb "c:\Tools\ADB\adb"
function adb-r($name) {adb uninstall --user 0 $name}
Set-Alias gdb "c:\Tools\ADB\uad_gui-windows"


Set-Alias vmware "C:\Program Files (x86)\VMware\VMware Player\VMPlayer.exe"
function touch($file) {
                "" | Out-File $file -Encoding ASCII
}
function df {
                get-volume
}
function sed($file, $find, $replace) {
                (Get-Content $file).replace("$find", $replace) | Set-Content $file
}
function which($name) {
                Get-Command $name | Select-Object -ExpandProperty Definition
}
function grep($regex, $dir) {
            if ( $dir ) {
                                    Get-ChildItem $dir | select-string $regex
                                                                return
                                                                                                }
                                                                                                                                    $input | select-string $regex
}
function unzip ($file) {
            Write-Output("Extracting", $file, "to", $pwd)
                        $fullFile = Get-ChildItem -Path $pwd -Filter .\cove.zip | ForEach-Object { $_.FullName }
                                        Expand-Archive -Path $fullFile -DestinationPath $pwd
}

function find-file($name) {
                Get-ChildItem -recurse -filter "*${name}*" -ErrorAction SilentlyContinue | ForEach-Object {
                                                        $place_path = $_.directory
                                                                                                                        Write-Output "${place_path}\${_}"
                                                                                                                                                                                                                        }
}

function ff($name) {
                Get-ChildItem -recurse -filter "*${name}*" -ErrorAction SilentlyContinue | ForEach-Object {
                                                        $place_path = $_.directory
                                                                                                                        Write-Output "${place_path}\${_}"
                                                                                                                                                                                                                        }
}

function ll { Get-ChildItem -Path $pwd -File }
function cd... { Set-Location ..\.. }
function cd.... { Set-Location ..\..\.. }
